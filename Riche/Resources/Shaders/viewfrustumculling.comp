#version 450
layout(local_size_x = 1) in;

// AABB 구조체
struct BoundingSphere {
    vec3 center;
    float radius;
};

// Indirect Draw 명령
struct IndircetDrawIndexedCommand {
    uint    indexCount;
    uint    instanceCount;
    uint    firstIndex;
    int     vertexOffset;
    uint    firstInstance;
};

layout(set = 0, binding = 0) buffer DrawIndexedCommands {
    IndircetDrawIndexedCommand drawIndexedCommands[];
};

layout(set = 0, binding = 1) uniform BoundingSphereBuffer {
    BoundingSphere boundingSphereList[5];
};

layout(set = 0, binding = 2) uniform FrustumPlanes {
    vec4 planes[6];  // View Frustum의 6개 평면
};

layout(set = 0, binding = 3) uniform UboViewProjection {
	mat4 view;
	mat4 projection;
} uboViewProjection;

bool IsSphereInFrustum(BoundingSphere sphere) 
{
    vec4 newCenter = uboViewProjection.view * vec4(sphere.center, 1.0);

    for (int i = 0; i < 6; ++i) 
    {
        // 평면과 구의 중심 사이의 거리 계산
        float distance = dot(planes[i].xyz, sphere.center) + planes[i].w;
        // 구의 반지름이 거리보다 작으면 Frustum 밖에 있는 것
        if (distance < -sphere.radius) 
        {
            return false;
        }
    }
    return true;
}



void main() {
    uint idx = gl_GlobalInvocationID.x;
    
    // 각 AABB를 Frustum에 대해 검사하고, 포함된 경우 Indirect Draw 명령을 설정
    if (IsSphereInFrustum(boundingSphereList[idx])) 
    {
        drawIndexedCommands[idx].instanceCount = 1;
    }
    else 
    {
        drawIndexedCommands[idx].instanceCount = 0;
    }
}
